.intel_syntax noprefix
.text
.global add
add:
  push rbp
  mov rbp, rsp
  sub rsp, 256
  mov [rbp-0], edi
  mov [rbp-4], esi
  lea rax, [rbp-0]
  push rax
  pop rax
  movsxd rax, dword ptr [rax]
  push rax
  lea rax, [rbp-4]
  push rax
  pop rax
  movsxd rax, dword ptr [rax]
  push rax
  pop rdi
  pop rax
  add rax, rdi
  push rax
  pop rax
  jmp .L.return.add
.L.return.add:
  mov rsp, rbp
  pop rbp
  ret
.global main
main:
  push rbp
  mov rbp, rsp
  sub rsp, 256
  lea rax, [rbp-0]
  push rax
  mov rax, 1
  push rax
  mov rax, 2
  push rax
  pop rdi
  pop rax
  add rax, rdi
  push rax
  mov rax, 4
  push rax
  pop rsi
  pop rdi
  mov rax, rsp
  and rax, 15
  jnz .L.call.0
  call add
  jmp .L.end.0
.L.call.0:
  sub rsp, 8
  call add
  add rsp, 8
.L.end.0:
  push rax
  pop rdi
  pop rax
  mov [rax], edi
  push rdi
  pop rax
  lea rax, [rbp-0]
  push rax
  pop rax
  movsxd rax, dword ptr [rax]
  push rax
  lea rax, [rbp-0]
  push rax
  pop rax
  movsxd rax, dword ptr [rax]
  push rax
  pop rdi
  pop rax
  add rax, rdi
  push rax
  pop rax
  jmp .L.return.main
.L.return.main:
  mov rsp, rbp
  pop rbp
  ret
